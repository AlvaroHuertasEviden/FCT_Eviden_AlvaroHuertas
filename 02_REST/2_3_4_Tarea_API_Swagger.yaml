openapi: 3.0.3
info:
  title: Project Management API
  description: |
    Welcome to the Project Management API! This API provides powerful tools for managing projects, blogs, articles, tags, users, and more. With intuitive endpoints, you can easily create, update, retrieve, and delete projects, as well as associate them with users, codes, details, and tags. Dive into efficient project management with our comprehensive API.
  version: "1.0.1"
  contact:
    name: Álvaro Huertas
    email: alvaro.huertas.external@eviden.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find more info here
  url: https://es.linkedin.com/in/alvarohuertasdiaz
servers:
  - url: https://evidenprojects.eviden.com/api/v3
tags:
  - name: Projects
    description: Operations about Project, Code and Detail
  - name: User
    description: Operations about User and their Phone
  - name: Blogs & Articles
    description: Operations about Blog
  - name: Tags
    description: Operations about Tag
paths:
  /projects:
    get:
      tags: 
        - Projects
      summary: Get all projects
      operationId: getAllProjects
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags: 
        - Projects
      summary: Create a new project
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /projects/{projectId}:
    get:
      tags: 
        - Projects
      summary: Get project by ID
      operationId: getProjectById
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
        '500':
          description: Internal server error
    put: 
      tags: 
        - Projects
      summary: Update a project
      operationId: updateProject
      parameters:
        - name: projectId
          in: path
          description: ID of the project to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input or request body
        '404':
          description: Project not found
        '500':
          description: Internal server error
    delete:
      tags: 
        - Projects
      summary: Delete a project and its associated codes and detail
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          description: ID of the project to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Project deleted successfully
        '404':
          description: Project not found
        '500':
          description: Internal server error
  /projects/{projectId}/codes:
    put:
      tags: 
        - Projects
      summary: Add a code to a project
      operationId: addCodeToProject
      parameters:
        - name: projectId
          in: path
          description: ID of the project to which the code will be added
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '200':
          description: Code added successfully to the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input or request body
        '404':
          description: Project not found
        '500':
          description: Internal server error
  /projects/{projectId}/tags:
    post:
      tags: 
        - Tags
      summary: Add tags to a project
      operationId: addTagsToProject
      parameters:
        - name: projectId
          in: path
          description: ID of the project to add tags
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tags added successfully to the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input or request body
        '404':
          description: Project not found
        '500':
          description: Internal server error
    get:
      tags: 
        - Tags
      summary: Get tags of a project
      operationId: getTagsOfProject 
      parameters:
        - name: projectId
          in: path
          description: ID of the project to get tags
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tags retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        '404':
          description: Project not found
        '500':
          description: Internal server error
    put:
      tags: 
        - Tags
      summary: Update tags of a project
      operationId: updateTagsOfProject  
      parameters:
        - name: projectId
          in: path
          description: ID of the project to update tags
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tags updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input or request body
        '404':
          description: Project not found
        '500':
          description: Internal server error
    delete:
      tags: 
        - Tags
      summary: Remove tags from a project
      operationId: removeTagsFromProject  
      parameters: 
        - name: projectId
          in: path
          description: ID of the project to remove tags
          required: true
          schema:
            type: integer
            format: int64
        - name: tagIds
          in: query
          description: IDs of the tags to remove from the project
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: Tags removed successfully from the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid input or request body
        '404':
          description: Project not found
        '500':
          description: Internal server error
  /user:
    post:
      tags:
        - User
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /user/phone:
    get:
      tags:
        - User
      summary: Obtiene el teléfono de un usuario
      description: Devuelve el número de teléfono asociado al ID de usuario proporcionado.
      operationId: phoneUser
      parameters:
        - name: userId
          in: query
          description: El ID de usuario para buscar el teléfono
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Éxito. Devuelve el número de teléfono del usuario.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: El ID del usuario
                  phoneNumber:
                    type: string
                    description: El número de teléfono del usuario
                example:
                  phoneNumber: "+1234567890"
        '404':
          description: No se encontró el usuario con el ID especificado.
        '500':
          description: Error interno del servidor.
  /user/{username}:
    get:
      tags:
        - User
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - User
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - User
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /blogs:
    post:
      tags:
        - Blogs & Articles
      summary: Create a new blog
      operationId: createBlog
      parameters:
        - name: user_id
          in: query
          description: ID of the user to create the blog for
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '201':
          description: Blog created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid input or request body
        '500':
          description: Internal server error
  /blogs/{blogId}:
    get:
      tags:
        - Blogs & Articles
      summary: Get a blog by ID
      operationId: getBlogById
      parameters:
        - name: blogId
          in: path
          description: ID of the blog to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Blog retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '404':
          description: Blog not found
        '500':
          description: Internal server error
    put:
      tags:
        - Blogs & Articles
      summary: Update a blog
      operationId: updateBlog
      parameters:
        - name: blogId
          in: path
          description: ID of the blog to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: Blog updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid input or request body
        '404':
          description: Blog not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Blogs & Articles
      summary: Delete a blog
      operationId: deleteBlog
      parameters:
        - name: blogId
          in: path
          description: ID of the blog to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Blog deleted successfully
        '404':
          description: Blog not found
        '500':
          description: Internal server error
  /blogs/{blogId}/articles:
    post:
      tags:
        - Blogs & Articles
      summary: Create a new article in a blog
      operationId: createArticleInBlog
      parameters:
        - name: blogId
          in: path
          description: ID of the blog to which the article will be added
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '201':
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or request body
        '404':
          description: Blog not found
        '500':
          description: Internal server error
  /blogs/{blogId}/articles/{articleId}:
    get:
      tags:
        - Blogs & Articles
      summary: Get an article in a blog by ID
      operationId: getArticleInBlogById
      parameters:
        - name: blogId
          in: path
          description: ID of the blog containing the article
          required: true
          schema:
            type: integer
            format: int64
        - name: articleId
          in: path
          description: ID of the article to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Article retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
        '500':
          description: Internal server error
    put:
      tags:
        - Blogs & Articles
      summary: Update an article in a blog
      operationId: updateArticleInBlog
      parameters:
        - name: blogId
          in: path
          description: ID of the blog containing the article
          required: true
          schema:
            type: integer
            format: int64
        - name: articleId
          in: path
          description: ID of the article to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '200':
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or request body
        '404':
          description: Article not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Blogs & Articles
      summary: Delete an article in a blog
      operationId: deleteArticleInBlog
      parameters:
        - name: blogId
          in: path
          description: ID of the blog containing the article
          required: true
          schema:
            type: integer
            format: int64
        - name: articleId
          in: path
          description: ID of the article to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Article deleted successfully
        '404':
          description: Article not found
        '500':
          description: Internal server error
  /articles/{articleId}/tags:
    post:
      tags: 
        - Tags
      summary: Add tags to an article
      operationId: addTagsToArticle
      parameters:
        - name: articleId
          in: path
          description: ID of the article to add tags
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tags added successfully to the article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or request body
        '404':
          description: Article not found
        '500':
          description: Internal server error
    get:
      tags: 
        - Tags
      summary: Get tags of an article
      operationId: getTagsOfArticle
      parameters:
        - name: articleId
          in: path
          description: ID of the article to get tags
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tags retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        '404':
          description: Article not found
        '500':
          description: Internal server error
    put:
      tags: 
        - Tags
      summary: Update tags of an article
      operationId: updateTagsOfArticle
      parameters:
        - name: articleId
          in: path
          description: ID of the article to update tags
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tags updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or request body
        '404':
          description: Article not found
        '500':
          description: Internal server error
    delete:
      tags: 
        - Tags
      summary: Remove tags from an article
      operationId: removeTagsFromArticle
      parameters: 
        - name: articleId
          in: path
          description: ID of the article to remove tags
          required: true
          schema:
            type: integer
            format: int64
        - name: tagIds
          in: query
          description: IDs of the tags to remove from the article
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: Tags removed successfully from the article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or request body
        '404':
          description: Article not found
        '500':
          description: Internal server error
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "Descripción del proyecto"
        language:
          type: string
          example: "Java"
        opensource:
          type: boolean
          example: true
        codes:
          type: array
          items:
            $ref: '#/components/schemas/Code'
        detail:
          $ref: '#/components/schemas/Detail'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Code:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        package:
          type: string
          example: "com.example.package"
        file:
          type: string
          example: "example.py"
    Detail:
      type: object
      properties:
        date:
          type: string
          format: date
          example: "10-04-2024"
        content:
          type: string
          example: "Detalles del proyecto"
        type:
          type: string
          example: "Type1"
        budget:
          type: number
          format: float
          example: 1000.00
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nick:
          type: string
          example: theUser
        name:
          type: string
          example: Álvaro
        phone:
          $ref: '#/components/schemas/Phone'
        blogs:
          type: array
          items:
            $ref: '#/components/schemas/Blog'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      xml:
        name: user
    Phone:
      type: object
      properties:
        value:
          type: integer
          format: int64
          example: 643847218
        type:
          type: string
          example: Móvil
        user_id:
          type: integer
          format: int64
      xml:
        name: phone
    Blog:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Título del blog"
        date:
          type: string
          format: date
          example: "10-04-2024"
        articles:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        user_id:
          type: integer
          format: int64
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Título del artículo"
        abstract:
          type: string
          example: "Resumen del artículo"
        content:
          type: string
          example: "Contenido del artículo"
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        label:
          type: string
          example: "etiqueta"
        date:
          type: string
          format: date
          example: "10-04-2024"